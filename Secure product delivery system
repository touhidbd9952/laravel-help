a secure product delivery system where:

When a customer places an order, your system generates an OTP (One-Time Password / Delivery Code).
That OTP is sent to the customerâ€™s email (or SMS).
When the delivery person gives the product, the customer must provide that OTP.
If the OTP matches, the order status is updated (e.g., from shipped â†’ completed).

ðŸ”¹ Step 1: Update orders table //////////////////

Schema::table('orders', function (Blueprint $table) {
    $table->string('delivery_otp')->nullable();
    $table->timestamp('otp_expires_at')->nullable();
    $table->boolean('otp_verified')->default(false);
});

ðŸ”¹ Step 2: Generate OTP when order is placed //////////////////
In your OrderController@store (after saving order):

use Illuminate\Support\Str;
use Illuminate\Support\Facades\Mail;
use Carbon\Carbon;

$order = Order::create([...]); // your existing order saving logic

// Generate 6-digit OTP
$otp = rand(100000, 999999);

// Save OTP & expiry
$order->update([
    'delivery_otp'   => $otp,
    'otp_expires_at' => Carbon::now()->addHours(48),
]);

// Send OTP to customer email
Mail::to($order->billing_email)->send(new \App\Mail\OrderDeliveryOtp($order));


ðŸ”¹ Step 3: Create Email Template //////////////////
php artisan make:mail OrderDeliveryOtp

public function build()
{
    return $this->subject('Your Delivery OTP Code')
        ->view('emails.delivery_otp')
        ->with([
            'orderNumber' => $this->order->order_number,
            'otp' => $this->order->delivery_otp,
        ]);
}

//////View (resources/views/emails/delivery_otp.blade.php)://///////////////
<p>Hello {{ $orderNumber }},</p>
<p>Your delivery OTP is: <b>{{ $otp }}</b></p>
<p>Please provide this OTP to the delivery person to confirm your order.</p>

ðŸ”¹ Step 4: Create OTP Verification Form //////////////////
Route in web.php:
                  Route::post('/verify-delivery-otp/{order}', [OrderController::class, 'verifyOtp'])->name('orders.verifyOtp');

//////Blade form (delivery person shows to customer):////////////////////
<form action="{{ route('orders.verifyOtp', $order->id) }}" method="POST">
    @csrf
    <label>Enter Delivery OTP:</label>
    <input type="text" name="otp" required>
    <button type="submit">Verify</button>
</form>

ðŸ”¹ Step 5: Verify OTP in Controller //////////////////

public function verifyOtp(Request $request, Order $order)
{
    $request->validate([
        'otp' => 'required|digits:6',
    ]);

    if ($order->delivery_otp !== $request->otp) {
        return back()->withErrors(['otp' => 'Invalid OTP!']);
    }

    if ($order->otp_expires_at->isPast()) {
        return back()->withErrors(['otp' => 'OTP expired!']);
    }

    // Mark OTP verified & update status
    $order->update([
        'otp_verified' => true,
        'status' => 'completed',
    ]);

    return back()->with('success', 'Delivery confirmed successfully!');
}

ðŸ”¹ Step 6: Delivery Flow //////////////////
1. Customer places order â†’ OTP generated & emailed.
2. Delivery person delivers package.
3. Customer gives OTP.
4. Delivery person (via app/web form) enters OTP.
5. System validates OTP & marks order as completed.











